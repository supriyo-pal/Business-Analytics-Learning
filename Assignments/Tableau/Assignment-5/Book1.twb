<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (Data)' inline='true' name='federated.0j1nak30advv4c16ja2mz1a8e00c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data' name='excel-direct.066599w0b5tn5n12osngn0jzed1y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Learning Business Analytics/Assignments/Tableau/Assignment-5/Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4A977723545D40AF99E85AA2B78E4E89]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_1F2F226E251645F9A74A03CAAE31872A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_1F2F226E251645F9A74A03CAAE31872A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_E91732462CD34C0F9F124DDEF2729475]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_E91732462CD34C0F9F124DDEF2729475]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_E91732462CD34C0F9F124DDEF2729475]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_4A977723545D40AF99E85AA2B78E4E89]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_1F2F226E251645F9A74A03CAAE31872A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_E91732462CD34C0F9F124DDEF2729475]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Location'>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_4A977723545D40AF99E85AA2B78E4E89'>
            <properties context=''>
              <relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_1F2F226E251645F9A74A03CAAE31872A'>
            <properties context=''>
              <relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_E91732462CD34C0F9F124DDEF2729475'>
            <properties context=''>
              <relation connection='excel-direct.066599w0b5tn5n12osngn0jzed1y' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_4A977723545D40AF99E85AA2B78E4E89' />
            <second-end-point object-id='People_1F2F226E251645F9A74A03CAAE31872A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Customer Name]' />
              <expression op='[Returned]' />
            </expression>
            <first-end-point object-id='Orders_4A977723545D40AF99E85AA2B78E4E89' />
            <second-end-point object-id='Returns_E91732462CD34C0F9F124DDEF2729475' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data)' name='federated.0j1nak30advv4c16ja2mz1a8e00c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j1nak30advv4c16ja2mz1a8e00c'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]' direction='DESC' />
          <slices>
            <column>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' />
              <text column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]</rows>
        <cols>[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{3254CCC3-4948-4DDB-8287-6D92CB74D2B9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data)' name='federated.0j1nak30advv4c16ja2mz1a8e00c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j1nak30advv4c16ja2mz1a8e00c'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='Count' name='[cnt:Region:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0j1nak30advv4c16ja2mz1a8e00c].[Longitude (generated)]' field-type='quantitative' max='12668566.875607077' min='6105521.9799787411' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0j1nak30advv4c16ja2mz1a8e00c].[Latitude (generated)]' field-type='quantitative' max='4508306.0598252732' min='600539.02235638886' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]' />
              <lod column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]' />
              <text column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]' />
              <text column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[cnt:Region:qk]' />
              <geometry column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j1nak30advv4c16ja2mz1a8e00c].[Latitude (generated)]</rows>
        <cols>[federated.0j1nak30advv4c16ja2mz1a8e00c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D36467BD-8B18-4C36-A24E-2644535E8F52}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Data)' name='federated.0j1nak30advv4c16ja2mz1a8e00c' />
          </datasources>
          <datasource-dependencies datasource='federated.0j1nak30advv4c16ja2mz1a8e00c'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Category:nk] * [federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk])</rows>
        <cols>([federated.0j1nak30advv4c16ja2mz1a8e00c].[yr:Order Date:ok] / [federated.0j1nak30advv4c16ja2mz1a8e00c].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{C2EE9EF8-CE62-43B3-9F33-C8181E170CA8}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j1nak30advv4c16ja2mz1a8e00c].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]</field>
            <field>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Region (Returns):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2476ED40-5D1A-4904-89D3-B9F90E2D24DB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Country:nk]</field>
            <field>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BDD624C0-3B9F-4FA7-A994-5284FA6AB0BB}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j1nak30advv4c16ja2mz1a8e00c].[none:Category:nk]</field>
            <field>[federated.0j1nak30advv4c16ja2mz1a8e00c].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8895615E-40B7-4D3F-9201-4FE7EA8FB249}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
